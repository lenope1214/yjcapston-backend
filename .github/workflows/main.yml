# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD 

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음 
on:
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

defaults:
  run:
      working-directory: ./jumanji

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-18.04

    # Task의 sequence를 명시한다.
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
      
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
      # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/
      
    # killport batch file Copy
    - name: Copy killport.bat
      run: cp killport.bat ./deploy/
      
    # killport batch file Copy
    - name: Copy deletejar.bat
      run: cp deletejar.bat ./deploy/
      
    # deploy batch file Copy
    - name: Copy deploy.bat
      run: cp deploy.bat ./deploy/
      
      # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./jumanji-project-build.zip ./deploy
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
          ./jumanji-project-build.zip s3://jumanji-project-build/

    - name: Deploy ec2
      run: |
        aws deploy create-deployment \
          --application-name YJCapston-jumanji \
          --deployment-group-name YJCpaston-jumanji-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},key=jumanji-project-build.zip,bundleType=zip

